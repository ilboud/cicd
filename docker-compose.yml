version: '2'
###################################################################################################
#  Run: docker-compose up -d                                                                      #
#  You can also start only the services needed. For example `docker-compuse up -d gitlab jenkins`.#
#  Modify the mapped volumes as needed                                                            #
#                                                                                                 #
#   Access to the CICD Tools:                                                                                       #
#                                                                                                 #
#     Gitlab:       http://127.0.0.1:18080                                                        #
#                   Login to gitlab using username: "root" and password: "5iveL!fe".              #
#                   Add your own user, setup ssh keys and so on.                                  #
#     Artifactory:  http://127.0.0.1:18081                                                        #
#                                                                                                 #   
#     Jenkins:      http://127.0.0.1:18082                                                        #
#                                                                                                 #
#     SonarQube:    http://127.0.0.1:19000                                                        #
#                                                                                                 #
###################################################################################################

networks:
  prodnetwork:
    driver: bridge

services:
  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    restart: always
    hostname: 'gitlab.docker'
    domain: 'ngena.com'
    environment:
        GITLAB_OMNIBUS_CONFIG:
        # external_url 'https://gitlab.ngena.com'
        # Add any other gitlab.rb configuration here, each on its own line
    ports:
      - '18080:80'
      - '443:443'
      - '2222:22'
    networks:
    - prodnetwork
    volumes:
      - '/Users/aatie/Projects/Docker/CICD/cicd/volumes/gitlab/config:/etc/gitlab'
      - '/Users/aatie/Projects/Docker/CICD/cicd/volumes/gitlab/logs:/var/log/gitlab'
      - '/Users/aatie/Projects/Docker/CICD/cicd/volumes/gitlab/data:/var/opt/gitlab'

  jenkins:
    build: 'jenkins'
    restart: always
    hostname: 'jenkins.docker'
    domain: 'ngena.com'
    environment:
      ARTIFACTORY_PORT: 8081
      SONAR_PORT: 9000
      SONAR_DB_PORT: 5432
    links:
      - gitlab:gitlab.ngena.docker
      - sonardb:sonardb.ngena.docker
      - artifactory:artifactory.ngena.docker
    ports:
      - '18082:8080'
    networks:
      - prodnetwork
    volumes:
      - '/Users/aatie/Projects/Docker/CICD/cicd/volumes/jenkins:/var/jenkins_home'

  artifactory:
    image: 'docker.bintray.io/jfrog/artifactory-oss:latest'
    restart: always
    hostname: 'artifactory.docker'
    domain: 'ngena.com'
    environment:
      VIRTUAL_PORT: 8081
    ports:
      - '18081:8081'
    networks:
      - prodnetwork
    volumes:
      - '/Users/aatie/Projects/Docker/CICD/cicd/volumes/artifactory/data:/artifactory/data'
      - '/Users/aatie/Projects/Docker/CICD/cicd/volumes/artifactory/logs:/artifactory/logs'
      - '/Users/aatie/Projects/Docker/CICD/cicd/volumes/artifactory/backup:/artifactory/backup'

  sonardb:
    image: postgres:latest
    restart: always
    hostname: 'sonardb.docker'
    domain: 'ngena.com'
    environment:
      POSTGRES_USER: 'sonar'
      POSTGRES_PASSWORD: 'secret'
    networks:
      - prodnetwork
    volumes:
      - /Users/aatie/Projects/Docker/CICD/cicd/volumes/sonardb/data:/var/lib/postgresql/data

  sonar:
    image: sonarqube:latest
    restart: always
    hostname: 'sonar.docker'
    domain: 'ngena.com'
    depends_on:
      - sonardb
    environment:
      SONARQUBE_JDBC_USERNAME: 'sonar'
      SONARQUBE_JDBC_PASSWORD: 'secret'
      SONARQUBE_JDBC_URL: 'jdbc:postgresql://sonardb:5432/sonar'
    networks:
    - prodnetwork
    ports:
      - "19000:9000"
      - "5432:5432"

#Below configuratoin is provided in case Gitlab-CI runners need to be run
#gitlabrunner:
#  image: 'gitlab/gitlab-runner:latest'
#  restart: always
#  privileged: true
#  environment:
#    REGISTRATION_TOKEN: 'erGgqG8NGMMsBxDtSpzn'
#    CI_SERVER_URL: 'http://gitlab.ngena.docker/ci'
#    RUNNER_NAME: 'docker-runner'
#    RUNNER_EXECUTOR: 'docker'
#    RUNNER_LIMIT: '3'
#    DOCKER_IMAGE: 'gitlab/dind:latest'
#    DOCKER_PRIVILEGED: 'true'
#    RUNNER_TAG_LIST: 'dind'
#    DOCKER_VOLUMES: '/var/lib/boot2docker/gitlab/runner/gradle_cache:/gradle:rw'
#  volumes:
#    - /var/run/docker.sock:/var/run/docker.sock
#    - .data/config:/etc/gitlab-runner

## Register the runner(s) manually :(
#docker exec -i -t buildenv_gitlabrunner_1 gitlab-runner register -n \
#   --docker-links 'cicd_sonardb_1:sonardb.docker' \
#   --docker-links 'cicd_gitlab_1:gitlab.ngena.docker' \
#   --docker-links 'cicd_artifactory_1:artifactory.ngena.docker'
